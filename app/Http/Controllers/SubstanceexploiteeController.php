<?php

namespace App\Http\Controllers;

use App\Substanceexploitee;
use Illuminate\Http\Request;
use Carbon\Carbon;
use Illuminate\Support\Facades\DB;
use Yajra\Datatables\Datatables;
use Debugbar;
use Illuminate\Support\Facades\Storage;

class SubstanceexploiteeController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view("backend.substances.list");
    }
    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('backend.substances.add');
    }
    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $this->validate($request, [
            'nom' => 'required',
        ]);
        $substanceexploitee = new Substanceexploitee();
        $substanceexploitee->nom = $request->get('nom') ? $request->get('nom') : '';
        return $substanceexploitee->save() ? redirect()->route('substanceexploitees.index') : redirect()->route('substanceexploitees.create');
    }
    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $substanceexploitee = Substanceexploitee::find($id);
        return  view('backend.substances.show', compact('substanceexploitee'));
    }
    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $substanceexploitee = Substanceexploitee::find($id);
        return view('backend.substances.edit', compact('substanceexploitee'));
    }
    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $this->validate($request, [
            'nom' => 'required',
        ]);
        $substanceexploitee = Substanceexploitee::find($id);
        $substanceexploitee->nom = $request->get('nom') ? $request->get('nom') : '';
        $substanceexploitee->save();
        return redirect()->route('substanceexploitees.index');
    }
    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $substanceexploitee = Substanceexploitee::find($id);
        return $substanceexploitee->delete();
    }
    public function data(Request $request)
    {
        $substanceexploitees = DB::table('substanceexploitees')->select(['id', 'nom', 'description', 'created_at']);
        $datatables = Datatables::of($substanceexploitees)
            ->addColumn('action', function ($model) {
                $url_edit = '<a href=":url" class="green" ><i class="ace-icon fa fa-pencil bigger-130"></i></a>';
                $delete = '<a data-id=":id" class="red delete"><i class="ace-icon fa fa-trash-o bigger-130 "></i></a>';
                $edit = route('substanceexploitees.edit', $model->id);
                $del = str_replace(":id", $model->id, $delete);
                $url_edit = str_replace(":url", $edit, $url_edit);
                $action = '<div class="hidden-sm hidden-xs action-buttons">&nbsp;' . $url_edit . '&nbsp;' . $del . '<div>';
                return $action;
            })
            ->editColumn('created_at', function ($model) {
                return $model->created_at ? with(new Carbon($model->created_at))->format('d/m/Y') : '';
            });
        // les filtres 
        // Global search function
        if ($keyword = $request->get('search')['value']) {
            //Debugbar::info($keyword);
            // override substanceexploitees.name global search
            $datatables->filterColumn('created_at', function ($query, $keyword) {
                $query->whereRaw("DATE_FORMAT(created_at,'%d/%m/%Y') like ?", ["%$keyword%"]);
            });
        }
        return $datatables->make(true);
    }
    /**
     * Show the form for editing the specified resource.
     *     
     * @param  \Illuminate\Http\Request $request
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function delete(Request $request, $id)
    {
        return response()->json($this->destroy($id));
    }
}
